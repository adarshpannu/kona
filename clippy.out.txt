    Checking yard v0.1.0 (/Users/adarshrp/Projects/yard)
warning: this function has too many arguments (11/7)
   --> src/qgm.rs:237:5
    |
237 | /     pub fn new(
238 | |         id: QBId, name: Option<String>, qbtype: QueryBlockType, select_list: Vec<NamedExpr>, quns: Vec<Quantifier>, pred_list: Option<Vec...
239 | |         group_by: Option<Vec<ExprKey>>, having_clause: Option<Vec<ExprKey>>, order_by: Option<Vec<(ExprKey, Ordering)>>, distinct: Distin...
240 | |         top_n: Option<usize>,
241 | |     ) -> Self {
    | |_____________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments
    = note: `#[warn(clippy::too_many_arguments)]` on by default

warning: unnecessary `if let` since only the `Some` variant of the iterator element is used
  --> src/qgmiter.rs:92:9
   |
92 |           for expr_list in &[&qblock.pred_list, &qblock.group_by, &qblock.having_clause] {
   |           ^                ------------------------------------------------------------- help: try: `[&qblock.pred_list, &qblock.group_by, &qblock.having_clause].iter().copied().flatten()`
   |  _________|
   | |
93 | |             if let Some(expr_list) = expr_list {
94 | |                 iter = Box::new(iter.chain(expr_list.iter().copied()));
95 | |             }
96 | |         }
   | |_________^
   |
help: ...and remove the `if let` statement in the for loop
  --> src/qgmiter.rs:93:13
   |
93 | /             if let Some(expr_list) = expr_list {
94 | |                 iter = Box::new(iter.chain(expr_list.iter().copied()));
95 | |             }
   | |_____________^
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#manual_flatten
   = note: `#[warn(clippy::manual_flatten)]` on by default

warning: this function has too many arguments (8/7)
   --> src/lop.rs:492:5
    |
492 | /     pub fn build_unary_plans(
493 | |         self: &QGM, env: &Env, aps_context: &APSContext, qblock: &QueryBlock, lop_graph: &mut LOPGraph, pred_map: &mut PredMap,
494 | |         select_list_quncol: &Bitset<QunCol>, worklist: &mut Vec<LOPKey>,
495 | |     ) -> Result<(), String> {
    | |___________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: useless use of `format!`
   --> src/qst.rs:277:17
    |
277 |                 format!("{}", colname)
    |                 ^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `colname.to_string()`
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#useless_format
    = note: `#[warn(clippy::useless_format)]` on by default

warning: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> src/pcode.rs:74:9
   |
74 |     Ref(&'a Box<dyn Array>),
   |         ^^^^^^^^^^^^^^^^^^ help: try: `&'a dyn Array`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrowed_box
   = note: `#[warn(clippy::borrowed_box)]` on by default

warning: you seem to be trying to use `&Box<T>`. Consider using just `&T`
  --> src/pcode.rs:79:22
   |
79 |     fn get(&self) -> &Box<dyn Array> {
   |                      ^^^^^^^^^^^^^^^ help: try: `&dyn Array`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#borrowed_box

warning: deref which would be done by auto-deref
  --> src/pcode.rs:81:31
   |
81 |             Column::Ref(r) => *r,
   |                               ^^ help: try this: `r`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#explicit_auto_deref
   = note: `#[warn(clippy::explicit_auto_deref)]` on by default

warning: this expression creates a reference which is immediately dereferenced by the compiler
  --> src/pcode.rs:82:33
   |
82 |             Column::Owned(o) => &o,
   |                                 ^^ help: change this to: `o`
   |
   = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#needless_borrow
   = note: `#[warn(clippy::needless_borrow)]` on by default

warning: this function has too many arguments (8/7)
   --> src/pop_compile.rs:227:5
    |
227 | /     pub fn compile_repartition_write(
228 | |         qgm: &mut QGM, lop_graph: &LOPGraph, lop_key: LOPKey, stage_graph: &mut StageGraph, pop_children: Vec<POPKey>, schema: Rc<Schema>,
229 | |         stage_link: StageLink, cpartitions: usize,
230 | |     ) -> Result<POPKey, String> {
    | |_______________________________^
    |
    = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#too_many_arguments

warning: `yard` (bin "yard") generated 9 warnings (run `cargo clippy --fix --bin "yard"` to apply 3 suggestions)
    Finished dev [unoptimized + debuginfo] target(s) in 7.52s
warning: the following packages contain code that will be rejected by a future version of Rust: partitions v0.2.4
note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 1`
